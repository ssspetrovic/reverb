LOAD CSV WITH HEADERS FROM 'file:///spotify_songs.csv' AS row
CREATE (:Song {
    track_id: row.track_id,
    track_name: row.track_name,
    track_artist: row.track_artist,
    track_popularity: toInteger(row.track_popularity),
    track_album_id: row.track_album_id,
    track_album_name: row.track_album_name,
    track_album_release_date: row.track_album_release_date,
    playlist_name: row.playlist_name,
    playlist_id: row.playlist_id,
    playlist_genre: row.playlist_genre,
    playlist_subgenre: row.playlist_subgenre,
    danceability: toFloat(row.danceability),
    energy: toFloat(row.energy),
    key: toInteger(row.key),
    loudness: toFloat(row.loudness),
    mode: toInteger(row.mode),
    speechiness: toFloat(row.speechiness),
    acousticness: toFloat(row.acousticness),
    instrumentalness: toFloat(row.instrumentalness),
    liveness: toFloat(row.liveness),
    valence: toFloat(row.valence),
    tempo: toFloat(row.tempo),
    duration_ms: toInteger(row.duration_ms)
})


// Kreiranje klastera
CREATE (:Cluster {name: 'reverb_cluster'});

// Kreiranje kolekcija (nodova)
CREATE (:Collection {name: 'songs'});
CREATE (:Collection {name: 'artists'});
CREATE (:Collection {name: 'albums'});
CREATE (:Collection {name: 'playlists'});

// Dodavanje atributa za svaku kolekciju
MATCH (song:Song)
CREATE (:CollectionSong {
    track_id: song.track_id,
    track_name: song.track_name,
    track_artist: song.track_artist,
    track_popularity: song.track_popularity,
    track_album_id: song.track_album_id,
    track_album_name: song.track_album_name,
    track_album_release_date: song.track_album_release_date,
    playlist_name: song.playlist_name,
    playlist_id: song.playlist_id,
    playlist_genre: song.playlist_genre,
    playlist_subgenre: song.playlist_subgenre,
    danceability: song.danceability,
    energy: song.energy,
    key: song.key,
    loudness: song.loudness,
    mode: song.mode,
    speechiness: song.speechiness,
    acousticness: song.acousticness,
    instrumentalness: song.instrumentalness,
    liveness: song.liveness,
    valence: song.valence,
    tempo: song.tempo,
    duration_ms: song.duration_ms
})

//Indeks na ime
CREATE INDEX FOR (a:CollectionArtist) ON (a.name);


// Prenos podataka iz baze 'Song' u kolekciju 'artists'
MATCH (song:Song)
MERGE (artist:CollectionArtist {name: song.track_artist})
ON CREATE SET
    artist.artist_id = rand() * 1000000  // Generišemo pseudoslučajan broj kao artist_id


//Indeks na ime
CREATE INDEX FOR (a:CollectionAlbum) ON (a.name);


// Prenos podataka iz baze 'Song' u kolekciju 'albums'
MATCH (song:Song)
MERGE (album:CollectionAlbum {name: song.track_album_name})
ON CREATE SET
    album.album_id = song.album_id,
    album.album_name = song.album_name,
    album.album_artist = song.album_artist,
    album.album_release_date = song.album_release_date,
    album.album_total_tracks = song.album_total_tracks,
    album.album_popularity = song.album_popularity


// Formiranje indeksa za track_id polje u kolekciji pesama
CREATE INDEX FOR (s:Song) ON (s.track_id);

MATCH (song:Song)
CREATE (:CollectionPlaylist {
    playlist_name: song.playlist_name,
    playlist_id: song.playlist_id,
    playlist_genre: song.playlist_genre,
    playlist_subgenre: song.playlist_subgenre
})

// Indeks na ime plejliste u kolekciji plejlista
CREATE INDEX FOR (p:CollectionPlaylist) ON (p.playlist_name);


// ********* Kreiranje relacija između čvorova ************

// Relacija između pesme i kolekcije pesama
MATCH (s:Song), (cs:CollectionSong)
WHERE s.track_id = cs.track_id
CREATE (cs)-[:BELONGS_TO]->(:Collection {name: 'songs'})

// Relacija između pesme i izvođača
MATCH (s:Song), (a:CollectionArtist)
WHERE s.track_artist = a.name
CREATE (s)-[:PERFORMED_BY]->(a)

// Promena vrednosti
MATCH (s:Song)-[r:PERFORMED_BY]->(a:CollectionArtist)
WHERE s.track_id = '6f807x0ima9a1j3VPbc7VN' AND a.artist_id = 72850.46266283402
SET r.since = date('2023-01-01')
RETURN s, r, a

// Relacija između pesme i albuma
MATCH (s:Song), (al:CollectionAlbum)
WHERE s.track_album_name = al.name
CREATE (s)-[:INCLUDED_IN]->(al)

// Relacija između pesme i plejliste
MATCH (s:Song), (p:CollectionPlaylist)
WHERE s.playlist_id = p.playlist_id
CREATE (s)-[:INCLUDED_IN_PLAYLIST]->(p)

//Prosecna popularnost
MATCH (al:CollectionAlbum)<-[:INCLUDED_IN]-(s:Song)
WITH al, AVG(s.track_popularity) AS avgPopularity
RETURN al.name, avgPopularity
ORDER BY avgPopularity DESC


// CREATE IZMENI PODATKE
CREATE (:CollectionSong {
    track_id: 'cx12xzcklsa_d1k23lddasq23',
    track_name: 'Ne moze nam niko nista',
    track_artist: 'Mitar Miric',
    track_popularity: 0.12,
    track_album_id: 'dsad123cxzm213',
    track_album_name: 'Ne moze nam niko nista',
    track_album_release_date: '1989-03-31',
    playlist_name: 'Jaka plejlista',
    playlist_id: 'sajdlkajdl21n3jcxz',
    playlist_genre: 'Narodna',
    playlist_subgenre: 'Zabavna',
    danceability: 0.45,
    energy: 0.46,
    key: 2,
    loudness: 0.78,
    mode: 1,
    speechiness: 0.05,
    acousticness: 0.23,
    instrumentalness: 0.64,
    liveness: 0.77,
    valence: 0.43,
    tempo: 0.3,
    duration_ms: 360000
})

// READ 
MATCH (song:CollectionSong {track_id: 'cx12xzcklsa_d1k23lddasq23'})
RETURN song

// UPDATE
MATCH (song:CollectionSong {track_id: 'cx12xzcklsa_d1k23lddasq23'})
SET song.track_name = 'Moze nam svako svasta'
RETURN song

// DELETE
MATCH (song:CollectionSong {track_id: 'cx12xzcklsa_d1k23lddasq23'})
DELETE song

// CREATE IZMENI PODATKE
CREATE (:CollectionArtist {
    name: 'Mitar Miric',
    artist_id: '44213xzcasdk123s',
    artist_genre: 'Zabavna muzika',
    artist_popularity: 0.88
})

// READ
MATCH (artist:CollectionArtist {artist_id: '44213xzcasdk123s'})
RETURN artist

// UPDATE
MATCH (artist:CollectionArtist {artist_id: '44213xzcasdk123s'})
SET artist.name = 'Breskvica'
RETURN artist

// DELETE
MATCH (artist:CollectionArtist {artist_id: '44213xzcasdk123s'})
DELETE artist

// CREATE
CREATE (:CollectionAlbum {
    name: 'Tako mlada',
    album_id: 'xdak142ncxdldsa',
    album_artist: 'Tanja Savic',
    album_release_date: '2005-06-16',
    album_total_tracks: 8,
    album_popularity: 0.45
})

// READ
MATCH (album:CollectionAlbum {album_id: 'xdak142ncxdldsa'})
RETURN album

// UPDATE
MATCH (album:CollectionAlbum {album_id: 'xdak142ncxdldsa'})
SET album.name = 'Stranci'
RETURN album

// DELETE
MATCH (album:CollectionAlbum {album_id: 'xdak142ncxdldsa'})
DELETE album

// SINGLE VECTOR SEARCH
MATCH (song:CollectionSong)
WHERE song.track_popularity >= 70
RETURN song

// MULTI VECTOR SEARCH
MATCH (song:CollectionSong)
WHERE song.playlist_genre = 'rock' AND song.track_popularity >= 70
RETURN song.track_name as trackName

// FILTER
MATCH (song:CollectionSong)
WHERE song.energy >= 0.8
RETURN song

// COUNT
MATCH (song:CollectionSong)
WHERE song.playlist_genre = 'pop'
RETURN COUNT(song) AS NumPopSongs

// Prebrojavanje pesama po zanru

MATCH (s:Song)
WHERE s.playlist_genre = 'pop'
WITH s.playlist_subgenre AS subgenre, COUNT(s) AS numSongs
RETURN subgenre, numSongs
ORDER BY numSongs DESC

// Popularni izvodjaci

MATCH (a:CollectionArtist)<-[:PERFORMED_BY]-(s:Song)
WHERE s.track_popularity > 70
WITH a, COUNT(s) AS popularSongs
RETURN a.name, popularSongs
ORDER BY popularSongs DESC


// Odredjene karakteristike
MATCH (s:Song)
WHERE s.energy > 0.8 AND s.danceability > 0.7
WITH s, s.track_popularity AS popularity
RETURN s.track_name, s.track_artist, popularity
ORDER BY popularity DESC

//Filter po plejlistama
MATCH (s:Song)
WHERE s.playlist_name CONTAINS 'Chill'
WITH s, s.playlist_name AS playlist
RETURN s.track_name, playlist
ORDER BY playlist
