services:
  eureka-server:
    build:
      context: ./EurekaService
      dockerfile: Dockerfile
    image: eureka-server:latest
    ports:
      - "8761:8761"

  gateway-api:
    build:
      context: ./GatewayService
      dockerfile: Dockerfile
    image: gateway-api:latest
    environment:
      EUREKA_CLIENT_SERVICEURL_DEFAULTZONE: http://eureka-server:8761/eureka
    depends_on:
      - eureka-server
      - graph-service
      - relational-service
    ports:
      - "9000:9000"

  relational-service:
    build:
      context: ./RelationalDatabaseService
      dockerfile: Dockerfile
    image: relational-service:latest
    depends_on:
      - postgresdb
      - eureka-server
    environment:
      EUREKA_CLIENT_SERVICEURL_DEFAULTZONE: http://eureka-server:8761/eureka
      SPRING_DATASOURCE_URL: "jdbc:postgresql://postgresdb:5432/nais"
      SPRING_DATASOURCE_USERNAME: nais
      SPRING_DATASOURCE_PASSWORD: nais
    ports:
      - "9030:9030"

  graph-service:
    build:
      context: ./GraphDatabaseService
      dockerfile: Dockerfile
    image: graph-spring-example:latest
    depends_on:
      - eureka-server
      - neo4j
    environment:
      EUREKA_CLIENT_SERVICEURL_DEFAULTZONE: http://eureka-server:8761/eureka
      SPRING_NEO4J_URI: "bolt://neo4j:7687"
      SPRING_NEO4J_USERNAME: neo4j
      SPRING_NEO4J_PASSWORD: password
    volumes:
      - ./data:/data

  orchestrator-service:
    build: './orchestrator-service'
    container_name: orchestrator-service
    depends_on:
      - kafka
    networks:
      - orchestrator-saga
    environment:
      - KAFKA_BROKER=kafka:29092
    ports:
      - "8080:8083"

  kafka:
    container_name: kafka
    image: obsidiandynamics/kafka
    restart: "no"
    ports:
      - "2181:2181"
      - "9092:9092"
    networks:
      - orchestrator-saga
    environment:
      KAFKA_LISTENERS: "INTERNAL://:29092,EXTERNAL://:9092"
      KAFKA_ADVERTISED_LISTENERS: "INTERNAL://kafka:29092,EXTERNAL://localhost:9092"
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: "INTERNAL:PLAINTEXT,EXTERNAL:PLAINTEXT"
      KAFKA_INTER_BROKER_LISTENER_NAME: "INTERNAL"
      KAFKA_ZOOKEEPER_SESSION_TIMEOUT: "6000"
      KAFKA_RESTART_ATTEMPTS: "10"
      KAFKA_RESTART_DELAY: "5"
      ZOOKEEPER_AUTOPURGE_PURGE_INTERVAL: "0"
    volumes:
      - ./data/kafka/data:/var/lib/kafka/data

  postgresdb:
    image: postgres:latest
    environment:
      POSTGRES_USER: "nais"
      POSTGRES_PASSWORD: "nais"
    volumes:
      - data:/var/lib/postgres
      - ./csv/users.csv:/tmp/users.csv
    ports:
      - "5432:5432"

  pgadmin:
    image: dpage/pgadmin4
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@example.com
      PGADMIN_DEFAULT_PASSWORD: admin
    ports:
      - "8080:80"
    depends_on:
      - postgresdb
    volumes:
      - ./data:/data
      - ./csv:/var/lib/pgadmin/import

  neo4j:
    image: neo4j
    container_name: neo4j
    ports:
      - "7474:7474"
      - "7687:7687"
    environment:
      NEO4J_AUTH: neo4j/password
    volumes:
      - ./data:/data
      - ./import:/var/lib/neo4j/import

networks:
  orchestrator-saga:
    driver: bridge

volumes:
  data:
  grafana_storage: {}
