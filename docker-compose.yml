version: '3.8'

services:
  eureka-server:
    build:
      context: ./EurekaService
      dockerfile: Dockerfile
    image: eureka-server:latest
    ports:
      - "8761:8761"

  gateway-api:
    build:
      context: ./GatewayService
      dockerfile: Dockerfile
    image: gateway-api:latest
    environment:
      EUREKA_CLIENT_SERVICEURL_DEFAULTZONE: http://eureka-server:8761/eureka
    depends_on:
      - eureka-server
      - elastic-search-service
      - graph-service
    ports:
      - "9000:9000"

  graph-service:
    build:
      context: ./GraphDatabaseService
      dockerfile: Dockerfile
    image: graph-spring-example:latest
    depends_on:
      - eureka-server
      - neo4j
    environment:
      EUREKA_CLIENT_SERVICEURL_DEFAULTZONE: http://eureka-server:8761/eureka
      SPRING_NEO4J_URI: "bolt://neo4j:7687"
      SPRING_NEO4J_USERNAME: neo4j
      SPRING_NEO4J_PASSWORD: password
    volumes:
      - ./data:/data

  elastic-search-service:
    build:
      context: ./ElasticSearchDatabaseService
      dockerfile: Dockerfile
    image: elastic-spring-example:latest
    restart: on-failure
    depends_on:
      - eureka-server
      - elasticsearch
    environment:
      SPRING_ELASTICSEARCH_URIS: http://elasticsearch:9200
      EUREKA_CLIENT_SERVICEURL_DEFAULTZONE: http://eureka-server:8761/eureka

  neo4j:
    image: neo4j
    container_name: neo4j
    ports:
      - "7474:7474"
      - "7687:7687"
    environment:
      NEO4J_AUTH: neo4j/password
    volumes:
      - ./data:/data
      - ./import:/var/lib/neo4j/import

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.11.1
    container_name: elasticsearch
    restart: always
    ports:
      - ${ELASTICSEARCH_PORT}:${ELASTICSEARCH_PORT}
    env_file:
      - .env
    environment:
      - xpack.security.enabled=false
      - discovery.type=single-node
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
    ulimits:
      memlock:
        soft: -1
        hard: -1

volumes:
  data:
  influxdb-storage:
  grafana_storage: { }
